# Hopefully we won't have to patch wpilib much and can get away with well
# placed patch files instead of vendoring

licenses(["notice"])

# TODO consider adding Java

WPILIB_VERSION = 2020

_hal_header_dirs = [
    "hal/src/main/native/include",
    "hal/src/main/native/athena",
    "hal/src/main/native/include/HAL/cpp",
    "hal/include",
    "hal/lib/athena",
]

_header_dirs = [
    "wpilibc/src/main/native/include",
    "wpilibc/shared/include",
    "wpilibc/athena/include",
]

genrule(
    name = "wpilib_version",
    outs = ["shared/src/WPILibVersion.cpp"],
    cmd = "\n".join([
        "cat > \"$@\" << EOF",
        "// Autogenerated file! Do not manually edit this file.",
        "#include \"WPILibVersion.h\"",
        "const char *GetWPILibVersion() {",
        "  return \"%s\";" % WPILIB_VERSION,
        "}",
        "EOF",
    ]),
)

genrule(
    name = "do_generate_FRCUsageReporting",
    srcs = [
        "hal/src/generate/FRCUsageReporting.h.in",
        "hal/src/generate/Instances.txt",
        "hal/src/generate/ResourceType.txt",
    ],
    outs = [
        "hal/src/main/native/include/hal/FRCUsageReporting.h",
    ],
    cmd = " ".join([
        "$(location @//third_party/wpilib:generate_FRCUsageReporting)",
        "$(location hal/src/generate/FRCUsageReporting.h.in)",
        "$(location hal/src/generate/Instances.txt)",
        "$(location hal/src/generate/ResourceType.txt)",
        "$(location hal/src/main/native/include/hal/FRCUsageReporting.h)",
    ]),
    tools = [
        "@//third_party/wpilib:generate_FRCUsageReporting",
    ],
)

_hal_h_hdrs = glob([d + "/**/*.h" for d in _hal_header_dirs])

_hal_hpp_hdrs = glob([d + "/**/*.hpp" for d in _hal_header_dirs])

exports_files(["hal/src/main/native/include/hal/HAL.h"])

cc_library(
    name = "hal",
    srcs = glob([
        "hal/src/main/native/athena/*.cpp",
        "hal/src/main/native/athena/cpp/*.cpp",
        "hal/src/main/native/athena/ctre/*.cpp",
        "hal/src/main/native/shared/handles/*.cpp",
    ]),
    hdrs = _hal_h_hdrs + _hal_hpp_hdrs + [
        "hal/src/main/native/include/hal/FRCUsageReporting.h",
    ],
    defines = [
        "WPILIB%s=1" % WPILIB_VERSION,
    ],
    copts = [
        "-Wno-unused-parameter",
    ],
    includes = _hal_header_dirs,
    linkopts = [
        "-lpthread",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@allwpilib_ni_libraries_repo//:ni-libraries",
        ":wpiutil",
    ],
)

_h_hdrs = glob([d + "/**/*.h" for d in _header_dirs])

_hpp_hdrs = glob([d + "/**/*.hpp" for d in _header_dirs])

cc_library(
    name = "wpilibc",
    srcs = glob([
        "wpilibc/src/main/native/cpp/*.cpp",
        "wpilibc/src/main/native/cpp/interfaces/*.cpp",
        "wpilibc/src/main/native/cpp/LiveWindow/*.cpp",
        "wpilibc/src/main/native/cpp/Commands/*.cpp",
        "wpilibc/src/main/native/cpp/SmartDashboard/*.cpp",
        "wpilibc/src/main/native/cpp/Internal/*.cpp",
    ]) + [
        ":wpilib_version",
    ],
    hdrs = _h_hdrs + _hpp_hdrs + [
        "wpilibc/src/main/native/include/frc/SpeedControllerGroup.inc",
        "wpilibc/src/main/native/include/frc/shuffleboard/ShuffleboardComponent.inc",
    ],
    copts = [
        "-DDYNAMIC_CAMERA_SERVER",  # TODO this is a hacky hack to avoid needing cscore
        "-Wno-unused-parameter",
        "-Wno-switch-enum",
        "-Wno-attributes",
        "-Wno-cast-align",
        "-Wno-cast-qual",
        "-Wno-deprecated-declarations",
        "-Wno-error",
        "-Wno-unused-value",
    ],
    defines = [
        "WPILIB%s=1" % WPILIB_VERSION,
    ],
    includes = _header_dirs,
    linkopts = [
        "-lpthread",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":ntcore",
        ":wpiutil",
        ":hal",
    ],
)

cc_library(
    name = "ntcore",
    visibility = ["//visibility:public"],
    srcs = glob([
        "ntcore/src/main/**/*.cpp",
        "ntcore/src/main/**/*.h",
    ], exclude = [
        #'src/main/native/cpp/networktables/**',
        "ntcore/src/main/native/cpp/jni/**",
    ]),
    copts = [
        "-Wno-switch-enum",
        "-Wno-cast-align",
    ],
    hdrs = glob([
        "ntcore/src/main/native/include/**/*.h",
        "ntcore/src/main/native/include/**/*.inl",
    ]),
    includes = [
        "ntcore/src/main/native/include",
    ],
    linkopts = [
        "-lpthread",
    ],
    deps = [
        ":wpiutil",
    ],
)

cc_library(
    name = "wpiutil",
    srcs = glob([
        "wpiutil/src/main/native/cpp/llvm/*.cpp",
        "wpiutil/src/main/native/cpp/llvm/Unix/Path.inc",
        "wpiutil/src/main/native/cpp/support/timestamp.cpp",
    ]),
    hdrs = glob([
        "wpiutil/src/main/native/include/**/*.h",
    ]) + [
        "wpiutil/src/main/native/include/wpi/circular_buffer.inc",
        "wpiutil/src/main/native/include/wpi/math",
    ],
    copts = [
        "-Wno-unused-parameter",
    ],
    includes = [
        "wpiutil/src/main/native/include",
    ],
    visibility = ["//visibility:public"],
)
